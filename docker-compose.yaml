version: '3'
services:
  mysql:
    container_name: mysql8
    image: mysql:${MYSQL_VERSION}
    restart: always
    ports:
      - 3309:3306
    environment:
      TZ: Asia/Shanghai
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: zero_mall
    volumes:
      - ${MYSQL_DIR}/data:/var/lib/mysql
      - ${MYSQL_DIR}/conf:/etc/mysql/conf.d/
      - ${MYSQL_DIR}/logs:/logs
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci --explicit_defaults_for_timestamp=true --lower_case_table_names=1
    networks:
      - coin-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 3s # 超时3秒
  Redis:
    container_name: redis6
    image: redis:${REDIS_VERSION}
    restart: always
    volumes:
      - ${REDIS_DIR}/data:/data
      - ${REDIS_DIR}/conf/redis.conf:/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT}:6379
    command: redis-server /etc/redis/redis.conf
    networks:
      - coin-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ] # 发送 PING 命令
      interval: 10s # 每5秒检查一次
      timeout: 3s # 超时3秒
      retries: 5 # 最多重试5次
  Etcd:
    container_name: etcd3
    image: bitnami/etcd:${ETCD_VERSION}
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
    privileged: true
    volumes:
      - ${ETCD_DIR}/data:/bitnami/etcd/data
    ports:
      - ${ETCD_PORT}:2379
      - 2380:2380
    networks:
      - coin-network
    healthcheck:
      test: [ "CMD", "etcdctl", "endpoint", "health" ] # 检查端点健康状态
      interval: 10s
      timeout: 5s
      retries: 3
  # nginx:
  #   container_name: nginx8
  #   image: nginx:stable-alpine-perl
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   networks:
  #     - my-network
  #   volumes:
  #     - ${NGINX_DIR}/nginx.conf:/etc/nginx/nginx.conf
  #     - ${SSL_DIR}:/etc/ssl/certs
  #   depends_on:
  #     Project-api-1:
  #       condition: service_healthy
  #     Project-api-2:
  #       condition: service_healthy
networks:
  coin-network:
    driver: bridge
    # ipam:
    #   # 避免与默认网路冲突
    #   config:
    #     - subnet: 172.16.0.0/16
